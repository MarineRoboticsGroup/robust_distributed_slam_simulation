include "buzz_includes/buzz_utils/vec2.bzz"
include "buzz_includes/buzz_utils/string.bzz"
include "buzz_includes/global_variables.bzz"
include "buzz_includes/debug.bzz"
include "buzz_includes/mapping_config.bzz"
include "buzz_includes/movement.bzz"
include "buzz_includes/communication.bzz"
include "buzz_includes/separator.bzz"

# Executed at init time
function init() {
  # Show trajectory for debugging
  show_colored_trajectory()
  # Initialization of random number generator. The controller function use time+id as the seed.
  srand(id)
  # Take off command for the Spiri drone model
  takeoff()
}
 
# Executed every time step
function step() {
  # Register a new pose only at each SIMULATION_TIME_DIVIDER steps to allow time for communication.
  # In realtime, this should be less of an issue.
  # Move
  random_movement_no_sensing()
  # Communication
  # Note that incoming messages (listen) are executed always first (after sensing), 
  # see Section II of "Buzz: An Extensible Programming Language for Self-Organizing Heterogeneous Robot Swarms"
  communication_no_sensing()
  # Separator detection
  separators_detection_no_sensing()
  # Increment number of steps
  current_step_ = current_step_ + 1 
}
 
# Execute at exit
function destroy() {
}
